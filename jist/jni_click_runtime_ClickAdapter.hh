/* Copyright (C) 2005 BerlinRoofNet Lab
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA. 
 *
 * For additional licensing options, consult http://www.BerlinRoofNet.de 
 * or contact brn@informatik.hu-berlin.de. 
 */

/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class click_runtime_ClickAdapter */

#ifndef _Included_click_runtime_ClickAdapter
#define _Included_click_runtime_ClickAdapter
#ifdef __cplusplus
extern "C" {
#endif
#undef click_runtime_ClickAdapter_SIMCLICK_PTYPE_UNKNOWN
#define click_runtime_ClickAdapter_SIMCLICK_PTYPE_UNKNOWN 0L
#undef click_runtime_ClickAdapter_SIMCLICK_PTYPE_ETHER
#define click_runtime_ClickAdapter_SIMCLICK_PTYPE_ETHER 1L
#undef click_runtime_ClickAdapter_SIMCLICK_PTYPE_IP
#define click_runtime_ClickAdapter_SIMCLICK_PTYPE_IP 2L
#undef click_runtime_ClickAdapter_SIMCLICK_PTYPE_WIFI
#define click_runtime_ClickAdapter_SIMCLICK_PTYPE_WIFI 3L
#undef click_runtime_ClickAdapter_SIMCLICK_PTYPE_WIFI_EXTRA
#define click_runtime_ClickAdapter_SIMCLICK_PTYPE_WIFI_EXTRA 4L
/* Inaccessible static: class_000240 */
/*
 * Class:     click_runtime_ClickAdapter
 * Method:    click_create
 * Signature: (Ljava/lang/String;J)I
 */
JNIEXPORT jlong JNICALL Java_click_runtime_ClickAdapter_click_1create
  (JNIEnv *, jobject, jstring, jlong);

/*
 * Class:     click_runtime_ClickAdapter
 * Method:    click_run
 * Signature: (IJ[Z)V
 */
JNIEXPORT void JNICALL Java_click_runtime_ClickAdapter_click_1run
  (JNIEnv *, jobject, jlong, jlong, jbooleanArray);

/*
 * Class:     click_runtime_ClickAdapter
 * Method:    click_kill
 * Signature: (IJ)V
 */
JNIEXPORT void JNICALL Java_click_runtime_ClickAdapter_click_1kill
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     click_runtime_ClickAdapter
 * Method:    click_send
 * Signature: (IJII[BIII[Z)I
 */
JNIEXPORT jint JNICALL Java_click_runtime_ClickAdapter_click_1send
  (JNIEnv *, jobject, jlong, jlong, jint, jint, jbyteArray, jint, jint, jint, jboolean, jbooleanArray);

/*
 * Class:     click_runtime_ClickAdapter
 * Method:    click_read_handler
 * Signature: (IJLjava/lang/String;Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_click_runtime_ClickAdapter_click_1read_1handler
  (JNIEnv *, jobject, jlong, jlong, jstring, jstring);

/*
 * Class:     click_runtime_ClickAdapter
 * Method:    click_write_handler
 * Signature: (IJLjava/lang/String;Ljava/lang/String;Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_click_runtime_ClickAdapter_click_1write_1handler
  (JNIEnv *, jobject, jlong, jlong, jstring, jstring, jstring);

#ifdef __cplusplus
}
#endif
#endif
